<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC2119 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC2460 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2460.xml">
<!ENTITY RFC2474 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2474.xml">
<!ENTITY RFC4271 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4271.xml">
<!ENTITY RFC4443 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4443.xml">
<!ENTITY RFC4760 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4760.xml">
<!ENTITY RFC5492 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5492.xml">
<!ENTITY RFC5095 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5095.xml">
<!ENTITY RFC5701 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5701.xml">
<!ENTITY RFC6437 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6437.xml">
<!ENTITY RFC7153 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.7153.xml">
<!ENTITY RFC8174 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.8174.xml">
<!ENTITY I-D.ietf-idr-rfc5575bis SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.ietf-idr-rfc5575bis.xml">
]>
<?rfc toc="yes" ?>
<?rfc symrefs="yes" ?>
<?rfc sortrefs="yes"?>
<?rfc compact="yes" ?>
<?rfc subcompact="no" ?>
<?rfc iprnotified="no" ?>
<?rfc strict="no" ?>
<rfc category="std" docName="draft-ietf-idr-flow-spec-v6-10.txt"  ipr="trust200902">
  <front>
  <title abbrev="IPv6 Flow Specification">Dissemination of Flow Specification Rules for IPv6</title>
   <author role="editor" fullname="Christoph Loibl" initials="C.L."
           surname="Loibl">
     <organization>Next Layer Communications</organization>
     <address>
       <postal>
         <street>Mariahilfer Guertel 37/7</street>
         <city>Vienna</city>
         <region></region>
         <code>1150</code>
         <country>AT</country>
       </postal>
       <phone>+43 664 1176414</phone>
       <email>cl@tix.at</email>
     </address>
   </author>
      <author fullname='Robert Raszuk' initials='R' surname='Raszuk' role="editor">
    <organization>Bloomberg LP</organization>
    <address>
        <postal>
            <street>731 Lexington Ave </street>
            <city>New York City</city>
            <region>NY</region>
            <code>10022</code>
            <country>USA</country>
        </postal>
        <email>robert@raszuk.net</email>
    </address>
    </author>
		<author role="editor" fullname="Susan Hares" initials="S" surname="Hares">
      <organization>Huawei</organization>
      <address>
        <postal>
          <street>7453 Hickory Hill</street>
          <city>Saline</city>
          <region>MI</region>
          <code>48176</code>
          <country>USA</country>
        </postal>
        <email>shares@ndzh.com</email>
      </address>
    </author>

    <date year="2017" />
    <area>Routing Area</area>
    <workgroup>IDR Working Group</workgroup>
    <keyword>RFC</keyword>
    <keyword>Request for Comments</keyword>
    <keyword>I-D</keyword>
    <keyword>Internet-Draft</keyword>
    <keyword>BGP Flow Flow Specification</keyword>
	<keyword>V6</keyword>
    <abstract>
   <t><xref target="I-D.ietf-idr-rfc5575bis" format="title" /> <xref target="I-D.ietf-idr-rfc5575bis" /> provides a
   protocol extension for propagation of traffic flow information for
   the purpose of rate limiting or filtering.  The <xref target="I-D.ietf-idr-rfc5575bis" /> specifies
   those extensions for IPv4 protocol data packets.
   </t>
   <t>
   This specification extends the current <xref target="I-D.ietf-idr-rfc5575bis" /> and defines changes
   to the original document in order to make it also usable and
   applicable to IPv6 data packets.
   </t>
    </abstract>
  </front>
  <middle>
     <section anchor="intro" title="Introduction">
	 <t>The growing amount of IPv6 traffic in private and public networks
   requires the extension of tools used in the IPv4 only networks to be
   also capable of supporting IPv6 data packets.
  </t>
  <t>
   In this document authors analyze the differences of IPv6 <xref target="RFC2460"></xref>
   flows description from those of traditional IPv4 packets and propose
   subset of new encoding formats to enable Dissemination of Flow
   Specification Rules <xref target="I-D.ietf-idr-rfc5575bis" /> for IPv6.
 </t>
 <t>
   This specification should be treated as an extension of base
   <xref target="I-D.ietf-idr-rfc5575bis" /> specification and not its replacement.  It only defines the
   delta changes required to support IPv6 while all other definitions
   and operation mechanisms of Dissemination of Flow Specification Rules
   will remain in the main specification and will not be repeated here.
   </t>
	<section title="Definitions of Terms Used in This Memo">
	<t>
	<list style="hanging">
	<t hangText="AFI - ">Address Family Identifier.</t>
	<t hangText="AS - ">Autonomous System.</t>
	<t hangText="NLRI - ">Network Layer Reachability Information.</t>
    <t hangText="SAFI - ">Subsequent Address Family Identifier.</t>
	<t hangText="VRF - ">Virtual Routing and Forwarding instance.</t>
	</list>
	</t>
	<t>
    The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL
    NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED",
    "MAY", and "OPTIONAL" in this document are to be interpreted as
    described in BCP 14 <xref target="RFC2119"></xref> <xref target="RFC8174"></xref>
    when, and only when, they appear in all capitals, as shown here.
	</t>
	</section>
   </section>
   <section title="IPv6 Flow Specification encoding in BGP">
   <t>
   The <xref target="I-D.ietf-idr-rfc5575bis" /> defines new SAFIs
   133 (Dissemination of Flow Specification) and 134 (L3VPN
   Dissemination of Flow Specification) applications in order to carry
   corresponding to each such application Flow Specification.
   </t>
   <t>
   Implementations wishing to exchange IPv6 Flow Specifications MUST use
   BGP's Capability Advertisement facility to exchange the Multiprotocol
   Extension Capability Code (Code 1) as defined in <xref target="RFC4760"></xref>.
   While <xref target="I-D.ietf-idr-rfc5575bis" /> specifies Flow
   Specification for IPv4 (AFI=1) only, the (AFI, SAFI) pair carried in
   the Multiprotocol Extension Capability MUST be: (AFI=2, SAFI=133) for
   IPv6 Flow Specification, and (AFI=2, SAFI=134) for VPNv6 Flow Specification.
   </t>
   <t>
   For both SAFIs the indication to which address family they are
   referring to will be recognized by AFI value (AFI=1 for IPv4 or
   VPNv4, AFI=2 for IPv6 and VPNv6 respectively).
   </t>
   <t>It needs to be observed that such choice of proposed encoding is
   compatible with filter validation against routing reachability
   information as described in section 6 of <xref target="I-D.ietf-idr-rfc5575bis" />.  Validation tables
   will now be performed according to the following rules.
   <list>
    <t>Flow specification received over AFI/SAFI=1/133 will be validated
      against routing reachability received over AFI/SAFI=1/1
	  </t>
	 <t>Flow specification received over AFI/SAFI=1/134 will be validated
      against routing reachability received over AFI/SAFI=1/128
	 </t>
     <t> Flow specification received over AFI/SAFI=2/133 will be validated
      against routing reachability received over AFI/SAFI=2/1
	 </t>
     <t>Flow specification received over AFI/SAFI=2/134 will be validated
      against routing reachability received over AFI/SAFI=2/128
	 </t>
   </list>
   </t>
   </section>
   <section title="IPv6 Flow Specification components">
   <t>The following components are redefined or added for the purpose
   of accommodating the IPv6 header encoding. Unless otherwise specified
   all other components defined in <xref target="I-D.ietf-idr-rfc5575bis" />
   Section 4.2.2 also apply to IPv6 Flow Specification.
   </t>
   <section anchor="type_1" title="Type 1 - Destination IPv6 Prefix" toc="include">
	   <t>Encoding: &lt;type (1 octet), length (1 octet), offset (1 octet), prefix (variable)&gt;
	  </t>
	  <t>Defines the destination prefix to match.  The offset has been
      defined to allow for flexible matching on part of the IPv6 address
      where it is required to skip (don't care) of N first bits of the address.
      This can be especially useful where part of the IPv6 address
      consists of an embedded IPv4 address and matching needs to happen
      only on the embedded IPv4 address. The encoded prefix contains
      enough octets for the bits used in matching (length minus offset
      bits).
	  </t>
   </section>
   <section anchor="type_2" title="Type 2 - Source IPv6 Prefix" toc="include">
	   <t>Encoding: &lt;type (1 octet), length (1 octet), offset
      (1 octet), prefix (variable)&gt;
      </t>
	  <t>Defines the source prefix to match. The length, offset and prefix
          are the same as in <xref target="type_1" />
	  </t>
	 </section>
   	 <section anchor="type_3" title="Type 3 - Next Header">
	   <t>Encoding: &lt;type (1 octet), [numeric_op, value]+&gt;
      </t>
	  <t>Contains a list of {numeric_op, value} pairs that
      are used to match the last Next Header (<xref target="RFC2460" />
      Section 3) value octet in IPv6 packets.
      </t>
      <t>This component uses the Numeric Operator (numeric_op) described in
      <xref target="I-D.ietf-idr-rfc5575bis" /> Section 4.2.1.1.
      Type 3 component values SHOULD be encoded as single byte
      (numeric_op len=00).
      </t>
	  <t>Note: While IPv6 allows for more then one Next Header field in the
	  packet the main goal of Type 3 flow specification component is to
      match on the subsequent IP protocol value.  Therefor the
      definition is limited to match only on last Next Header field in
      the packet.
	  </t>
	  </section>
    <section anchor="type_7" title="Type 7 - ICMPv6 type" toc="include">
    <t>Encoding: &lt;type (1 octet), [numeric_op, value]+&gt;
    </t>
    <t>Defines a list of {numeric_op, value} pairs used to match the
    type field of an ICMPv6 packet (see also <xref target="RFC4443" /> Section 2.1).
    </t>
    <t>
        This component uses the Numeric Operator (numeric_op) described
        in <xref target="I-D.ietf-idr-rfc5575bis" /> Section 4.2.1.1.
        Type 7 component values SHOULD be encoded as single byte
        (numeric_op len=00).
    </t>
    <t>
        In case of the presence of the ICMPv6 type (code)
        component only ICMPv6 packets can match the entire Flow Specification.
        The ICMPv6 type (code) component, if present, never matches when the packet's
        last Next Header field value is not 58 (ICMPv6), if the packet is fragmented
        and this is not the first fragment, or if the system is unable to
        locate the transport header. Different implementations may or may not be
        able to decode the transport header.
    </t>
    </section>
    <section anchor="type_8" title="Type 8 - ICMPv6 code" toc="include">
    <t>Encoding: &lt;type (1 octet), [numeric_op, value]+&gt;
    </t>
    <t>
    Defines a list of {numeric_op, value} pairs used to match the
    code field of an ICMPv6 packet (see also <xref target="RFC4443" /> Section 2.1).
    </t>
    <t>
        This component uses the Numeric Operator (numeric_op) described
        in <xref target="I-D.ietf-idr-rfc5575bis" /> Section 4.2.1.1.
        Type 8 component values SHOULD be encoded as single byte
        (numeric_op len=00).
    </t>
    <t>The last paragraph of <xref target="type_7" /> also applies to this component.</t>
    </section>
     <section anchor="type_12 " title="Type 12 - Fragment">
	   <t>Encoding: &lt;type (1 octet), [bitmask_op, bitmask]+&gt;
      </t>
      <t> Defines a list of {bitmask_op, bitmask} pairs used to match specific IP fragments.
      </t>
      <t>This component uses the Bitmask Operator (bitmask_op) described
      in <xref target="I-D.ietf-idr-rfc5575bis" /> Section 4.2.1.2. The
      Type 12 component bitmask MUST be encoded as single byte bitmask
      (bitmask_op len=00).
      </t>
        <t>
        <figure title="Fragment Bitmask Operand" anchor="figure_fragment_bitmask_operand">
        <artwork>
                   0   1   2   3   4   5   6   7
                 +---+---+---+---+---+---+---+---+
                 | 0 | 0 | 0 | 0 |LF |FF |IsF| 0 |
                 +---+---+---+---+---+---+---+---+
        </artwork>
        </figure>
        </t>
        <t>Bitmask values:
        <list style="hanging">
        <t hangText="IsF -">Is a fragment - match if IPv6 Fragment Header (<xref target="RFC2460" /> Section 4.5)
            Fragment Offset is not 0
        </t>
        <t hangText="FF -">First fragment - match if IPv6 Fragment Header (<xref target="RFC2460" /> Section 4.5)
            Fragment Offset is 0 AND M flag is 1
        </t>
        <t hangText="LF -">Last fragment - match if IPv6 Fragment Header (<xref target="RFC2460" /> Section 4.5)
            Fragment Offset is not 0 AND M flag is 0
        </t>
        <t hangText="0 -">SHOULD be set to 0 on NLRI encoding, and MUST be ignored during decoding
        </t>
        </list>
        </t>
	 </section>
     <section anchor="type_13" title="Type 13 - Flow Label (new)">
	   <t>Encoding: &lt;type (1 octet), [numeric_op, value]+&gt;
      </t>
	  <t>Contains a list of {numeric_op, value} pairs that are used to match
      the 20-bit Flow Label IPv6 header field (<xref target="RFC2460"></xref>
      Section 3).
      </t>
      <t>This component uses the Numeric Operator (numeric_op) described in
      <xref target="I-D.ietf-idr-rfc5575bis" /> Section 4.2.1.1. Type 13
      component values SHOULD be encoded as 1-, 2-, or 4-byte quantities
      (numeric_op len=00, len=01 or len=10).
      </t>
	 </section>
    <section title="Encoding Example">
	<t> The following example demonstrates the new prefix encoding for: "all
    packets to ::1234:5678:9A00:0/64-104 from 192::/8 and port {range
   [137, 139] or 8080}".  In the destination prefix, "80-" represents
   the prefix offset of 80 bits.  In this exmaple, the 0 offset is
   omitted from the printed source prefix.
	<figure>
	<artwork>
 +-------------------------+------------+-----------------------+
 | destination             | source     | port                  |
 +-------------------------+----------- +-----------------------+
 |0x01 68 50 12 34 56 78 9A| 02 00 08 c0|04 03 89 45 8b 91 1f 90|
 +-------------------------+------------+-----------------------+
	</artwork>
	</figure>
	</t>
        </section>
   </section>
	<section title="Order of Traffic Filtering Rules">
	<t>
	The orignal definition for the order of traffic filtering rules can
    be reused with new consideration for the IPv6 prefix offset.  As long
    as the offsets are equal, the comparison is the same, retaining
    longest-prefix-match semantics.  If the offsets are not equal, the
    lowest offset has precedence, as this flow matches the most
    significant bit.
	</t>
	<t>
	<figure>
	<artwork>
    Pseudocode
    flow_rule_v6_cmp (a, b)
    {
     comp1 = next_component(a);
     comp2 = next_component(b);
     while (comp1 || comp2) {
       // component_type returns infinity on end-of-list
         if (component_type(comp1) &lt; component_type(comp2)) {
             return A_HAS_PRECEDENCE;
         }
         if (component_type(comp1) &gt; component_type(comp2)) {
             return B_HAS_PRECEDENCE;
         }

         if (component_type(comp1) == IPV6_DESTINATION || IPV6_SOURCE) {
           // offset not equal, lowest offset has precedence
           // offset equal ...
           common_len = MIN(prefix_length(comp1), prefix_length(comp2));
           cmp = prefix_compare(comp1, comp2, offset, common_len);
           // not equal, lowest value has precedence
           // equal, longest match has precedence
          } else {
           common =
            MIN(component_length(comp1), component_length(comp2));
            cmp = memcmp(data(comp1), data(comp2), common);
            // not equal, lowest value has precedence
            // equal, longest string has precedence
           }
      }

          return EQUAL;
    }
	</artwork>
	</figure>
	</t>
	</section>
	<section title="IPv6 Flow Specification Traffic Filtering Action changes">
	<t>Traffic Filtering Actions from <xref target="I-D.ietf-idr-rfc5575bis" />
        Section 7 can also be applied to IPv6 Flow Specifications. To allow
        an IPv6 address specific route-target, a new Traffic Filtering
        Action IPv6 address specific extended community is specified in
        <xref target="redirect_ipv6" /> below:
    </t>
    <section anchor="redirect_ipv6" title="RedirectIPv6 (rt-redirect-ipv6) Type/Sub-Type 0x800B">
       <t>The redirect IPv6 address specific extended community
       allows the traffic to be redirected to a VRF routing instance that
       lists the specified IPv6 address specific route-target in its import
       policy.  If several local instances match this criteria, the choice
       between them is a local matter (for example, the instance with the
       lowest Route Distinguisher value can be elected).
       </t>
       <t>This extended community uses the same encoding as the IPv6
       address specific Route Target extended community
       <xref target="RFC5701"></xref> Section 2 with the high-order
       octet of the Type always set to 0x80 and the Sub-Type always 0x0B.
       </t>
       <t>Interferes with: All BGP Flow Specification redirect Traffic Filtering
           Actions (with itself and those specified in
           <xref target="I-D.ietf-idr-rfc5575bis" /> Section 7.4).
       </t>
       </section>
	</section>
   <section title="Security Considerations">
   <t>No new security issues are introduced to the BGP protocol by this
   specification over the security considerations in
   <xref target="I-D.ietf-idr-rfc5575bis" />
   </t>
   </section>
   <section anchor="IANA" title="IANA Considerations">
   <t>This section complies with <xref target="RFC7153"></xref>
   </t>
    <t>
   IANA is requested to create and maintain a new registry entitled:
   "Flow Spec IPv6 Component Types" containing the initial entries as specified in
   <xref target="iana_flow_component_types" />.
   </t>
       <texttable anchor="iana_flow_component_types" title="Registry: Flow Spec IPv6 Component Types">
          <ttcol align="left">Value</ttcol>
          <ttcol align="left">Name</ttcol>
          <ttcol align="left">Reference</ttcol>
          <c>1</c>   <c>Destination IPv6 Prefix</c>  <c>[this document]</c>
          <c>2</c>   <c>Source IPv6 Prefix</c>       <c>[this document]</c>
          <c>3</c>   <c>Next Header</c>         <c>[this document]</c>
          <c>4</c>   <c>Port</c>                <c>[this document]</c>
          <c>5</c>   <c>Destination port</c>    <c>[this document]</c>
          <c>6</c>   <c>Source port</c>         <c>[this document]</c>
          <c>7</c>   <c>ICMPv6 type</c>         <c>[this document]</c>
          <c>8</c>   <c>ICMPv6 code</c>         <c>[this document]</c>
          <c>9</c>   <c>TCP flags</c>           <c>[this document]</c>
          <c>10</c>  <c>Packet length</c>       <c>[this document]</c>
          <c>11</c>  <c>DSCP</c>                <c>[this document]</c>
          <c>12</c>  <c>Fragment</c>            <c>[this document]</c>
          <c>13</c>  <c>Flow Label</c>            <c>[this document]</c>
    </texttable>
    <t>
        IANA maintains a registry entitled "Generic Transitive
        Experimental Use Extended Community Sub-Types". For the purpose of
        this work, IANA is requested to add the following value to the
        registry:
    </t>
   <texttable anchor="iana_ext_comm_subtypes" title="Registry: Generic Transitive Experimental Use Extended Community Sub-Types">
         <ttcol align="left">Sub-Type Value</ttcol>
         <ttcol align="left">Name</ttcol>
         <ttcol align="left">Reference</ttcol>
         <c>0x0B</c>
         <c>
           Flow spec rt-redirect-ipv6 format
         </c>
         <c>[this document]</c>
   </texttable>
 </section>
 <section title="Acknowledgements">
 <t>Authors would like to thank Pedro Marques, Hannes Gredler and Bruno
   Rijsman, Brian Carpenter, and Thomas Mangin for their valuable input.
   </t>
 </section>
 <section title="Contributors">
     <t>
<figure>
<artwork>
Danny McPherson
Verisign, Inc.

Email: dmcpherson@verisign.com

</artwork>
</figure>
</t><t>
<figure>
<artwork>
Burjiz Pithawala
Individual

Email: burjizp@gmail.com

</artwork>
</figure>
</t><t>
<figure>
<artwork>
Andy Karch
Cisco Systems
170 West Tasman Drive
San Jose, CA  95134
USA

Email: akarch@cisco.com

</artwork>
</figure>
     </t>
 </section>
  </middle>
  <back>
    <references title="Normative References">
      &RFC2119;
	  &RFC2460;
	  &RFC2474;
	  &RFC4271;
      &RFC4443;
      &RFC4760;
	  &RFC5492;
	  &RFC6437;
	  &RFC5701;
	  &RFC7153;
      &RFC8174;
      &I-D.ietf-idr-rfc5575bis;
	</references>
	<references title="Informative References">
	&RFC5095;
    </references>
  </back>
</rfc>